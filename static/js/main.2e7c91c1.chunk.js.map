{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","todos","todo","todoDetail","isLoading","handleSubmit","bind","handleChange","handleHref","onValueChange","onValueTextChange","handleDelete","handleUpdate","fetchTodo","this","setState","fetch","then","response","json","data","catch","e","console","log","preventDefault","method","headers","body","JSON","stringify","text","prevState","target","value","href","completed","bool","id","className","type","data-toggle","data-target","map","key","_id","onClick","completedAt","onSubmit","onChange","disabled","name","checked","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2e7c91c1.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      todos: [],\n      todo: '',\n      todoDetail : {},\n      isLoading: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleHref = this.handleHref.bind(this)\n    this.onValueChange = this.onValueChange.bind(this)\n    this.onValueTextChange = this.onValueTextChange.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.fetchTodo = this.fetchTodo.bind(this)\n  }\n\n\n  componentDidMount() {\n    this.setState({isLoading: true})\n     this.fetchTodo();     \n  }\n\n  fetchTodo() {\n    fetch('https://raj-todo-api.herokuapp.com/todos')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({todos: data},()=>{\n        this.setState({isLoading: false})\n      })\n    })\n    .catch(e => console.log('Some error occurred')) \n  }\n\n  //Handle Submit Start\n  handleSubmit(e) {\n   e.preventDefault();\n   this.setState({isLoading: true})\n  //  fetch('http://localhost:8080/todo', requestOptions)\n  //   .then(\n  //       data => {\n  //         this.setState({todos: this.state.todos.push(data)})\n  //       },   \n  //     ).catch(e => {\n  //       console.log('Some error occurred during posting');\n  //     })\n   fetch('https://raj-todo-api.herokuapp.com/todo', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({text: this.state.todo})\n  }).then(response => response.json())\n    .then(data => {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, data]\n      }),() => {\n        this.setState({isLoading: false})\n      })\n    })\n    .catch(e => console.log(e));\n\n    return true;\n\n  }\n  //Handle Submit End\n\n  //Handle Change Start\n  handleChange(e) {\n    this.setState({todo: e.target.value});\n  }\n  //Handle Change End\n\n  //Handle Href Start\n  handleHref(e) {\n    e.preventDefault();\n    fetch(e.target.href,{\n      method: 'get',\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json())\n      .then(data => {\n        this.setState({todoDetail: data})\n      })\n  }\n  //Handle Href End\n\n\n  //Handle On Value Change Start\n\n  onValueChange(e) {\n    var completed = e.target.value;\n    console.log(\"String value\" + completed);\n    var bool = completed === 'true'? true : false;\n    console.log(\"boolean value \" + bool);\n    this.setState({\n        todoDetail: {...this.state.todoDetail, completed: bool}})\n        // console.log(this.state.todoDetail)\n  }\n  //Handle on Value Change End\n\n  //on Value Text Change Start\n  onValueTextChange(e) {\n    console.log('It is changing');\n  }\n\n  //on value text change End\n\n  //Handle Update start\n  handleUpdate(e)  {\n      e.preventDefault();\n      this.setState({isLoading: true})\n      fetch(`https://raj-todo-api.herokuapp.com/todo/${this.state.todoDetail.id}`,{\n        method: 'post',\n        headers : {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.todoDetail)\n      }).then( response => response.json()).then(data => {this.setState({todoDetail: {}}, this.fetchTodo)});\n      this.fetchTodo();\n  } \n  //Handle Update End\n\n  //Handle Delete start\n  handleDelete(e) {\n    e.preventDefault();\n    fetch(`https://raj-todo-api.herokuapp.com/todo/${this.state.todoDetail.id}`, {\n      method: 'delete',\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then( response => response.json()).then(data => {this.setState({todoDetail: {}}, this.fetchTodo)});\n  }\n  //Handle Delete End\n\n\n  render() {\n    return (\n      \n      <div>\n        {\n          this.state.isLoading?\n            <p>Please wait while loading...</p>\n          : null\n        }\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n\n          <a className=\"navbar-brand\" href=\"index.html\">Navbar</a>\n\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"home.html\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"about.html\">About</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"contact.html\">Contact</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        \n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                {\n                  this.state.todos.map(todo =>                   \n                      <div className=\"card m-4 col-4\" key={todo._id}>\n                        <div className=\"card-header\" key={todo._id}><a href={\"https://raj-todo-api.herokuapp.com/todo/\"+todo.id} onClick={this.handleHref}>Task : {todo.text}</a></div>\n                        <div className=\"card-footer\">Completed At : {todo.completedAt}</div>            \n                      </div>\n                  )\n                }\n                </div>\n            </div>\n            <div className='col-4'>\n            <form onSubmit={this.handleSubmit}>\n              <h2>Add To The Todo</h2>        \n              <div className=\"form-group\">\n                <label>Task:</label>\n                <input type=\"text\" className=\"form-control\" id=\"todo\" onChange={this.handleChange}/>\n              </div>              \n              <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n            </form>\n            <hr />\n            {\n              this.state.todoDetail.text ? \n                  <form onSubmit={this.handleSubmit}>\n                  <h2>Update Todo</h2>        \n                  <div className=\"form-group\">\n                    <label>Task:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"todo\" onChange={this.onValueTextChange} value={this.state.todoDetail.text} disabled={false}/>\n                  </div>           \n                  {/* {console.log(this.state.todoDetail)} */}\n                  <div className=\"form-group\">                    \n                    <input type='radio' name=\"completed\" value='true' onChange={this.onValueChange} checked={this.state.todoDetail.completed === true}/>True\n                    <input type=\"radio\" name=\"completed\" value='false' onChange={this.onValueChange} checked={this.state.todoDetail.completed === false} />False\n                  </div>   \n                  \n                  <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleDelete} >Delete</button>\n                  <button type=\"submit\" className=\"btn btn-primary ml-4\" onClick={this.handleUpdate}>Update</button>\n                </form>\n                : null\n                \n            }\n            {console.log(this.state.todoDetail)}\n           \n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}